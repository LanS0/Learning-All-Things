package learn_unit_test

import (
	"fmt"
	"testing"
)

/*
	COMMAND UNTUK MELAKUKAN TEST

	BASIC COMMAND TEST
	-> go test

	BASIC COMMAND TEST WITH MORE DETAIL
	-> go test -v

	JIKA INGIN MELAKUKAN TEST, FUNCTION TERTENTU BISA MEMAKAI
	-> go test -v -run nama_function || go test -v -run=nama_function 

	COMMAND INI SEMUA HANYA UNTUK UNIT TEST DALAM SATU FOLDER

	BISA UNTUK MELAKUKAN TEST PADA ROOT FOLDER / PARENT FOLDER
	DENGAN COMMAND 
	-> go test -v ./...

*/

// SEMUA NAMA FUNCTION TESTING HARUS DIAWALI DENGAN TEST
func TestHelloMike(t *testing.T) {
	result := UnitTest("MIKE")

	if result != "HELLO MIKE" {
		// // PANIC
		// /*
		// 	PANIC MEMBERIKAN ERROR YANG SEDIKIT SULIT TERBACA
		// */
		// panic("RESULT IS NOT HELLO MIKE")

		// // FAIL
		// /*
		// 	FAIL MERUPAKAN SALAH SATU ERROR YANG MELANJUTKAN SAMPAI BAWAH 
		// */
		// t.Fail()

		// // ERROR
		/*
			ERROR FUNCTION LEBIH SEPERTI MELAKUKAN log(print) ERROR, NAMUN SETELAH MELAKUKAN LOG ERROR DIA AKAN
			SECARA OTOMATIS MEMANGGIL FUNCTION FAIL()
		*/
		t.Error("HARUSNYA INI HASILNYA MIKE")
	}

	fmt.Println("MASUK KE PRINTLN HELLO MIKE")

}

func TestHelloBagas(t *testing.T) {
	result := UnitTest("BAGAS")

	if result != "HELLO BAGAS" {
		// // PANIC
		// panic("RESULT IS NOT HELLO BAGAS")

		// // FAILNOW
		// /*
		// 	FAILNOW MERUPAKAN SALAH SATU ERROR YANG MEMBERHENTIKAN SAAT ITU JUGA SEHINGGA TIDAK SAMPAI BAWAH 
		// */
		// t.FailNow()

		// // FATAL
		/*
			FATAL SAMA SEPERTI FUNCTION ERROR(), NAMUN SETELAH MELAKUKAN LOG FATAL DIA AKAN
			SECARA OTOMATIS MEMANGGIL FUNCTION FAILNOW()
		*/
		t.Fatal("HARUSNYA INI HASILNYA BAGAS")
	}

	fmt.Println("MASUK KE PRINTLN HELLO BAGAS")

}